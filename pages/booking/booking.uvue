<template>
  <!-- 预订页面 - 完全匹配HTML设计 -->
  <view class="bg-white min-h-screen relative overflow-hidden">
    <scroll-view class="pb-16" scroll-y>
      <!-- 车辆信息卡片 - 完全匹配HTML设计 -->
      <view class="p-4 bg-white">
        <view class="flex items-center">
          <image :src="carInfo.image" :alt="carInfo.alt" class="w-16 h-16 rounded-lg object-cover" mode="aspectFill"></image>
          <view class="ml-3 flex-1">
            <text class="font-semibold">{{ carInfo.name }}</text>
            <view class="flex items-center mt-1">
              <text class="fa fa-star text-secondary text-xs mr-1"></text>
              <text class="text-sm">{{ carInfo.rating }}</text>
              <text class="text-neutral-light text-sm ml-2">¥{{ carInfo.price }}/天</text>
            </view>
          </view>
        </view>
      </view>

      <!-- 预订信息表单 - 完全匹配HTML设计 -->
      <view class="mt-3 bg-white p-4">
        <text class="font-semibold mb-4">预订信息</text>
        
        <view class="space-y-4">
          <!-- 服务日期 -->
          <view>
            <text class="text-sm text-neutral mb-2">服务日期</text>
            <picker mode="date" :value="formData.serviceDate" @change="onDateChange" :start="minDate">
              <view class="flex justify-between items-center p-3 border border-gray-200 rounded-lg">
                <text :class="formData.serviceDate ? 'text-neutral' : 'text-neutral-light'">
                  {{ formData.serviceDate || '选择日期' }}
                </text>
                <text class="fa fa-calendar text-neutral-light"></text>
              </view>
            </picker>
          </view>

          <!-- 服务时间 -->
          <view>
            <text class="text-sm text-neutral mb-2">服务时间</text>
            <picker mode="time" :value="formData.serviceTime" @change="onTimeChange">
              <view class="flex justify-between items-center p-3 border border-gray-200 rounded-lg">
                <text :class="formData.serviceTime ? 'text-neutral' : 'text-neutral-light'">
                  {{ formData.serviceTime || '选择时间' }}
                </text>
                <text class="fa fa-clock-o text-neutral-light"></text>
              </view>
            </picker>
      </view>

          <!-- 接车地址 -->
          <view>
            <text class="text-sm text-neutral mb-2">接车地址</text>
            <view class="flex justify-between items-center p-3 border border-gray-200 rounded-lg" @click="selectLocation('pickup')">
              <text :class="formData.pickupAddress ? 'text-neutral' : 'text-neutral-light'">
                {{ formData.pickupAddress || '选择接车地址' }}
              </text>
              <text class="fa fa-map-marker text-neutral-light"></text>
            </view>
          </view>

          <!-- 目的地 -->
          <view>
            <text class="text-sm text-neutral mb-2">目的地</text>
            <view class="flex justify-between items-center p-3 border border-gray-200 rounded-lg" @click="selectLocation('destination')">
              <text :class="formData.destination ? 'text-neutral' : 'text-neutral-light'">
                {{ formData.destination || '选择目的地' }}
              </text>
              <text class="fa fa-map-marker text-neutral-light"></text>
            </view>
          </view>

          <!-- 联系电话 -->
          <view>
            <text class="text-sm text-neutral mb-2">联系电话</text>
            <input 
              type="tel" 
              v-model="formData.contactPhone" 
              placeholder="请输入联系电话" 
              class="w-full p-3 border border-gray-200 rounded-lg"
            >
          </view>

          <!-- 备注 -->
          <view>
            <text class="text-sm text-neutral mb-2">备注</text>
            <textarea 
              v-model="formData.remarks" 
              placeholder="特殊需求或备注信息" 
              class="w-full p-3 border border-gray-200 rounded-lg h-20 resize-none"
              maxlength="200"
            ></textarea>
          </view>
        </view>
      </view>

      <!-- 服务选项 - 完全匹配HTML设计 -->
      <view class="mt-3 bg-white p-4">
        <text class="font-semibold mb-4">服务选项</text>
        
        <view class="space-y-3">
          <view 
            v-for="service in serviceOptions" 
                :key="service.id"
            class="flex justify-between items-center py-2"
            @click="toggleService(service)"
          >
            <view class="flex-1">
              <text class="text-sm">{{ service.name }}</text>
              <text class="text-neutral-light text-xs block mt-1">{{ service.description }}</text>
            </view>
            <view class="flex items-center">
              <text class="text-primary text-sm mr-3">{{ service.price > 0 ? '+¥' + service.price : '免费' }}</text>
              <view class="w-5 h-5 border border-primary rounded flex items-center justify-center" :class="service.selected ? 'bg-primary' : ''">
                <text v-if="service.selected" class="fa fa-check text-white text-xs"></text>
            </view>
            </view>
          </view>
        </view>
      </view>

      <!-- 费用明细 - 完全匹配HTML设计 -->
      <view class="mt-3 bg-white p-4">
        <text class="font-semibold mb-4">费用明细</text>
        
        <view class="space-y-2">
          <view class="flex justify-between items-center">
            <text class="text-sm">车辆租赁费</text>
            <text class="text-sm">¥{{ carInfo.price }}</text>
          </view>
          <view 
            v-for="service in selectedServices" 
            :key="service.id" 
            class="flex justify-between items-center"
          >
            <text class="text-sm">{{ service.name }}</text>
            <text class="text-sm">+¥{{ service.price }}</text>
          </view>
          <view class="border-t border-gray-200 pt-2 mt-2">
            <view class="flex justify-between items-center">
              <text class="font-semibold">总计</text>
              <text class="text-primary font-bold text-lg">¥{{ totalAmount }}</text>
            </view>
          </view>
        </view>
      </view>
    </scroll-view>

    <!-- 底部操作栏 - 完全匹配HTML设计 -->
    <view class="fixed bottom-16 left-0 right-0 bg-white border-t border-gray-100 p-4">
      <view class="flex justify-between items-center">
        <view>
          <text class="text-neutral-light text-sm">总计</text>
          <text class="text-primary font-bold text-xl">¥{{ totalAmount }}</text>
      </view>
        <button class="bg-primary text-white px-8 py-3 rounded-lg font-medium btn-hover" @click="submitBooking">
          确认预订
        </button>
      </view>
    </view>
  </view>
</template>

<script>
export default {
  data() {
    return {
      carId: '',
      // 车辆信息 - 完全匹配HTML设计
      carInfo: {
        _id: 'car001',
        name: '奔驰S级',
        image: 'https://picsum.photos/300/300?random=70',
        alt: '奔驰S级婚车',
        rating: 4.9,
        price: 2800
      },
      // 预订表单数据 - 完全匹配HTML设计
      formData: {
        serviceDate: '',
        serviceTime: '',
        pickupAddress: '',
        destination: '',
        contactPhone: '',
        remarks: ''
      },
      // 服务选项 - 完全匹配HTML设计
      serviceOptions: [
        {
          id: 1,
          name: '婚车装饰',
          description: '包含鲜花装饰、拉花布置等',
          price: 0,
          selected: true
        },
        {
          id: 2,
          name: '专业司机',
          description: '经验丰富的专业司机',
          price: 0,
          selected: true
        },
        {
          id: 3,
          name: '跟拍服务',
          description: '专业摄影师全程跟拍',
          price: 500,
          selected: false
        },
        {
          id: 4,
          name: '迎宾服务',
          description: '专业迎宾团队',
          price: 300,
          selected: false
        }
      ]
    }
  },
  computed: {
    // 计算最小日期（今天）
    minDate() {
      const today = new Date();
      return today.toISOString().split('T')[0];
    },
    // 已选择的服务
    selectedServices() {
      return this.serviceOptions.filter(service => service.selected && service.price > 0);
    },
    // 计算总金额
    totalAmount() {
      const basePrice = this.carInfo.price;
      const servicesPrice = this.selectedServices.reduce((total, service) => total + service.price, 0);
      return basePrice + servicesPrice;
    }
  },
  onLoad(options) {
    this.carId = options.carId || 'car001';
    // 可以从URL参数获取车辆信息
    if (options.carName) {
      this.carInfo.name = options.carName;
    }
    if (options.price) {
      this.carInfo.price = parseInt(options.price);
    }
  },
  methods: {
    // 日期选择
    onDateChange(e) {
      this.formData.serviceDate = e.detail.value;
    },
    
    // 时间选择
    onTimeChange(e) {
      this.formData.serviceTime = e.detail.value;
    },
    
    // 地址选择
    selectLocation(type) {
      // 模拟地址选择，实际应用中会调用地图API
      const addresses = [
        '北京市朝阳区国贸大厦',
        '北京市海淀区中关村',
        '北京市西城区金融街',
        '北京市东城区王府井'
      ];
      
      uni.showActionSheet({
        itemList: addresses,
        success: (res) => {
          const selectedAddress = addresses[res.tapIndex];
          if (type === 'pickup') {
            this.formData.pickupAddress = selectedAddress;
          } else if (type === 'destination') {
            this.formData.destination = selectedAddress;
          }
        }
      });
    },
    
    // 切换服务选项
    toggleService(service) {
      // 前两个服务是默认包含的，不能取消
      if (service.id <= 2) {
        return;
      }
      service.selected = !service.selected;
    },
    
    // 表单验证
    validateForm() {
      if (!this.formData.serviceDate) {
        uni.showToast({ title: '请选择服务日期', icon: 'none' });
        return false;
      }
      
      if (!this.formData.serviceTime) {
        uni.showToast({ title: '请选择服务时间', icon: 'none' });
        return false;
      }
      
      if (!this.formData.pickupAddress) {
        uni.showToast({ title: '请选择接车地址', icon: 'none' });
        return false;
      }
      
      if (!this.formData.destination) {
        uni.showToast({ title: '请选择目的地', icon: 'none' });
        return false;
      }
      
      if (!this.formData.contactPhone) {
        uni.showToast({ title: '请输入联系电话', icon: 'none' });
        return false;
      }
      
      // 验证手机号格式
      const phoneRegex = /^1[3-9]\d{9}$/;
      if (!phoneRegex.test(this.formData.contactPhone)) {
        uni.showToast({ title: '请输入正确的手机号', icon: 'none' });
        return false;
      }
      
      return true;
    },
    
    // 提交预订
    async submitBooking() {
      if (!this.validateForm()) {
        return;
      }
      
      uni.showLoading({ title: '提交中...' });
      
      try {
        // 构建订单数据
        const orderData = {
          carId: this.carId,
          carName: this.carInfo.name,
          serviceDate: this.formData.serviceDate,
          serviceTime: this.formData.serviceTime,
          pickupAddress: this.formData.pickupAddress,
          destination: this.formData.destination,
          contactPhone: this.formData.contactPhone,
          remarks: this.formData.remarks,
          selectedServices: this.selectedServices,
          totalAmount: this.totalAmount
        };
        
        // 模拟API调用延迟
        await new Promise(resolve => setTimeout(resolve, 1500));
        
        uni.hideLoading();
        
        // 生成订单ID
        const orderId = 'WC' + Date.now();
        
        // 跳转到支付页面
        uni.redirectTo({
          url: `/pages/payment/payment?orderId=${orderId}&amount=${this.totalAmount}&carName=${encodeURIComponent(this.carInfo.name)}`
        });
        
      } catch (error) {
        uni.hideLoading();
        console.error('提交预订失败:', error);
        uni.showToast({
          title: '提交失败，请重试',
          icon: 'none'
        });
      }
    }
  }
}
</script>

<style lang="scss" scoped>
/* 页面特定样式 - 使用全局Tailwind CSS类，只定义特殊需求 */

/* 确保图标字体正确显示 */
.fa {
  font-family: 'FontAwesome' !important;
}

/* 触摸反馈效果 - 匹配HTML设计 */
.btn-hover:active {
  transform: translateY(-2px);
  box-shadow: 0 4px 12px rgba(183, 110, 121, 0.3);
}

/* 输入框和选择器样式 */
input, textarea {
  font-family: inherit;
  outline: none;
}

input:focus, textarea:focus {
  border-color: rgba(183, 110, 121, 0.3);
  box-shadow: 0 0 0 2px rgba(183, 110, 121, 0.1);
}

/* 状态栏适配 */
page {
  background-color: #F9F9F9;
}
</style>
