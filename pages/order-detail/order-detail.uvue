<template>
  <!-- 订单详情页 - 完全匹配HTML设计 -->
  <view class="bg-white min-h-screen relative overflow-hidden">
    <!-- 状态横幅 - 完全匹配HTML设计 -->
    <view class="p-4 text-white flex items-center" :class="getStatusBgClass(orderDetail.status)">
      <text class="fa mr-2" :class="getStatusIcon(orderDetail.status)"></text>
      <text class="font-medium">{{ getStatusMessage(orderDetail.status) }}</text>
    </view>

    <scroll-view class="pb-16" scroll-y>
      <!-- 订单信息 - 完全匹配HTML设计 -->
      <view class="p-4 bg-white">
        <view class="flex justify-between items-start mb-4">
          <view>
            <text class="text-lg font-semibold">订单号</text>
            <text class="text-neutral-light text-sm block">{{ orderDetail.orderNo }}</text>
          </view>
          <view class="text-right">
            <text class="text-primary font-bold text-xl">¥{{ orderDetail.totalAmount }}</text>
            <text class="text-neutral-light text-sm block">{{ orderDetail.createTime }}</text>
          </view>
        </view>
      </view>

      <!-- 服务详情 - 完全匹配HTML设计 -->
      <view class="mt-3 bg-white p-4">
        <text class="font-semibold mb-4">服务详情</text>
        
        <view class="flex items-center">
          <image :src="orderDetail.car.image" :alt="orderDetail.car.name" class="w-16 h-16 rounded-lg object-cover" mode="aspectFill"></image>
          <view class="ml-3 flex-1">
            <text class="font-medium">{{ orderDetail.car.name }}</text>
            <view class="text-neutral-light text-sm mt-1">
              <text class="block">服务时间：{{ orderDetail.serviceDate }} {{ orderDetail.serviceTime }}</text>
              <text class="block">服务地点：{{ orderDetail.pickupAddress }}</text>
              <text class="block">目的地：{{ orderDetail.destination }}</text>
            </view>
          </view>
        </view>
      </view>

      <!-- 订单进度 - 完全匹配HTML设计 -->
      <view class="mt-3 bg-white p-4">
        <text class="font-semibold mb-4">订单进度</text>
        
        <view class="space-y-4">
          <view 
            v-for="(step, index) in orderSteps" 
            :key="index" 
            class="flex items-center"
          >
            <view class="w-6 h-6 rounded-full flex items-center justify-center mr-3" :class="step.completed ? 'bg-success' : 'bg-gray-200'">
              <text v-if="step.completed" class="fa fa-check text-white text-xs"></text>
              <view v-else class="w-2 h-2 rounded-full bg-gray-400"></view>
            </view>
            <view class="flex-1">
              <text class="text-sm" :class="step.completed ? 'text-neutral' : 'text-neutral-light'">{{ step.title }}</text>
              <text v-if="step.time" class="text-neutral-light text-xs block">{{ step.time }}</text>
            </view>
          </view>
        </view>
      </view>

      <!-- 费用明细 - 完全匹配HTML设计 -->
      <view class="mt-3 bg-white p-4">
        <text class="font-semibold mb-4">费用明细</text>
        
        <view class="space-y-2">
          <view class="flex justify-between items-center">
            <text class="text-sm">车辆租赁费</text>
            <text class="text-sm">¥{{ orderDetail.baseAmount }}</text>
          </view>
          <view 
            v-for="service in orderDetail.additionalServices" 
            :key="service.id" 
            class="flex justify-between items-center"
          >
            <text class="text-sm">{{ service.name }}</text>
            <text class="text-sm">+¥{{ service.price }}</text>
          </view>
          <view class="border-t border-gray-200 pt-2 mt-2">
            <view class="flex justify-between items-center">
              <text class="font-semibold">总计</text>
              <text class="text-primary font-bold text-lg">¥{{ orderDetail.totalAmount }}</text>
            </view>
          </view>
        </view>
      </view>

      <!-- 车主信息 - 完全匹配HTML设计 -->
      <view class="mt-3 bg-white p-4">
        <text class="font-semibold mb-4">车主信息</text>
        
        <view class="flex items-center">
          <image :src="orderDetail.owner.avatar" alt="车主头像" class="w-12 h-12 rounded-full object-cover" mode="aspectFill"></image>
          <view class="ml-3 flex-1">
            <text class="font-medium">{{ orderDetail.owner.name }}</text>
            <view class="flex items-center mt-1">
              <text class="fa fa-star text-secondary text-xs mr-1"></text>
              <text class="text-sm">{{ orderDetail.owner.rating }}</text>
              <text class="text-neutral-light text-sm ml-2">{{ orderDetail.owner.phone }}</text>
            </view>
          </view>
          <button class="bg-light text-primary p-2 rounded-full" @click="contactOwner">
            <text class="fa fa-phone"></text>
          </button>
        </view>
      </view>

      <!-- 联系信息 - 完全匹配HTML设计 -->
      <view class="mt-3 bg-white p-4">
        <text class="font-semibold mb-4">联系信息</text>
        
        <view class="space-y-2">
          <view class="flex justify-between">
            <text class="text-sm text-neutral-light">联系电话</text>
            <text class="text-sm">{{ orderDetail.contactPhone }}</text>
          </view>
          <view v-if="orderDetail.remarks" class="flex justify-between">
            <text class="text-sm text-neutral-light">备注</text>
            <text class="text-sm">{{ orderDetail.remarks }}</text>
          </view>
        </view>
      </view>
    </scroll-view>

    <!-- 底部操作栏 - 完全匹配HTML设计 -->
    <view class="fixed bottom-16 left-0 right-0 bg-white border-t border-gray-100 p-4">
      <view class="flex justify-between">
        <button 
          v-if="orderDetail.status === 'pending'" 
          class="flex-1 bg-light text-neutral font-medium py-3 rounded-lg mr-2" 
          @click="cancelOrder"
        >
          取消订单
        </button>
        <button class="flex-1 bg-primary text-white font-medium py-3 rounded-lg" :class="orderDetail.status === 'pending' ? 'ml-2' : ''" @click="contactOwner">
          联系车主
        </button>
      </view>
    </view>
  </view>
</template>

<script>
export default {
  data() {
    return {
      orderId: '',
      // 订单详情数据 - 完全匹配HTML设计
      orderDetail: {
        orderNo: 'WC202501151030',
        status: 'confirmed', // pending, confirmed, ongoing, completed, cancelled
        totalAmount: 3300,
        createTime: '2025-01-15 10:30',
        serviceDate: '2025-02-14',
        serviceTime: '09:00',
        pickupAddress: '北京市朝阳区三里屯',
        destination: '北京市朝阳区国贸',
        contactPhone: '138****8888',
        remarks: '请准时到达，谢谢',
        car: {
          name: '奔驰S级',
          image: 'https://picsum.photos/300/300?random=90'
        },
        baseAmount: 2800,
        additionalServices: [
          { id: 1, name: '跟拍服务', price: 500 }
        ],
        owner: {
          name: '张师傅',
          avatar: 'https://picsum.photos/100/100?random=91',
          rating: 4.9,
          phone: '138****0000'
        }
      }
    }
  },
  computed: {
    // 订单步骤
    orderSteps() {
      const status = this.orderDetail.status;
      return [
        {
          title: '订单已创建',
          time: this.orderDetail.createTime,
          completed: ['pending', 'confirmed', 'ongoing', 'completed'].includes(status)
        },
        {
          title: '车主已确认',
          time: status !== 'pending' ? '2025-01-15 11:00' : null,
          completed: ['confirmed', 'ongoing', 'completed'].includes(status)
        },
        {
          title: '服务进行中',
          time: ['ongoing', 'completed'].includes(status) ? '2025-02-14 09:00' : null,
          completed: ['ongoing', 'completed'].includes(status)
        },
        {
          title: '服务已完成',
          time: status === 'completed' ? '2025-02-14 13:00' : null,
          completed: status === 'completed'
        }
      ];
    }
  },
  onLoad(options) {
    this.orderId = options.id || 'WC202501151030';
    this.loadOrderDetail();
  },
  methods: {
    // 加载订单详情
    loadOrderDetail() {
      // 在实际应用中，这里会调用API获取订单详情
      console.log('加载订单详情，ID:', this.orderId);
      // 可以根据orderId动态调整数据
    },
    
    // 获取状态背景样式
    getStatusBgClass(status) {
      const classMap = {
        'pending': 'bg-secondary',      // 等待确认 - 金色
        'confirmed': 'bg-primary',      // 已确认 - 主色
        'ongoing': 'bg-blue-500',       // 进行中 - 蓝色
        'completed': 'bg-success',      // 已完成 - 绿色
        'cancelled': 'bg-red-500'       // 已取消 - 红色
      };
      return classMap[status] || 'bg-neutral';
    },
    
    // 获取状态图标
    getStatusIcon(status) {
      const iconMap = {
        'pending': 'fa-clock-o',
        'confirmed': 'fa-check-circle',
        'ongoing': 'fa-car',
        'completed': 'fa-check',
        'cancelled': 'fa-times-circle'
      };
      return iconMap[status] || 'fa-question-circle';
    },
    
    // 获取状态消息
    getStatusMessage(status) {
      const messageMap = {
        'pending': '等待车主确认',
        'confirmed': '车主已确认，请按时到达指定地点',
        'ongoing': '服务进行中，请保持电话畅通',
        'completed': '服务已完成，感谢您的使用',
        'cancelled': '订单已取消'
      };
      return messageMap[status] || '订单状态异常';
    },
    
    // 联系车主
    contactOwner() {
      uni.showModal({
        title: '联系车主',
        content: `是否拨打车主电话：${this.orderDetail.owner.phone}？`,
        success: (res) => {
          if (res.confirm) {
            uni.makePhoneCall({
              phoneNumber: '13800138000'
            });
          }
        }
      });
    },
    
    // 取消订单
    cancelOrder() {
      uni.showModal({
        title: '确认取消',
        content: '确定要取消这个订单吗？取消后费用将原路退回。',
        success: (res) => {
          if (res.confirm) {
            uni.showLoading({ title: '取消中...' });
            
            // 模拟API调用
            setTimeout(() => {
              uni.hideLoading();
              this.orderDetail.status = 'cancelled';
              
              uni.showToast({
                title: '订单已取消',
                icon: 'success'
              });
            }, 1500);
          }
        }
      });
    }
  }
}
</script>

<style lang="scss" scoped>
/* 页面特定样式 - 使用全局Tailwind CSS类，只定义特殊需求 */

/* 确保图标字体正确显示 */
.fa {
  font-family: 'FontAwesome' !important;
}

/* 状态背景颜色 */
.bg-blue-500 {
  background-color: #3b82f6;
}

.bg-red-500 {
  background-color: #ef4444;
}

.bg-gray-200 {
  background-color: #e5e7eb;
}

.bg-gray-400 {
  background-color: #9ca3af;
}

/* 状态栏适配 */
page {
  background-color: #F9F9F9;
}
</style>
