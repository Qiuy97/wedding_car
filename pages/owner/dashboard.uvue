<template>
  <view class="owner-dashboard">
    <!-- 头部信息 -->
    <view class="header-section" :style="{ paddingTop: statusBarHeight + 'px' }">
      <view class="header-content">
        <!-- 头像在最左侧 -->
        <image 
          class="owner-avatar" 
          :src="ownerInfo.avatar" 
          mode="aspectFill"
          @error="onAvatarError"
        ></image>
        
        <!-- 用户信息区域 -->
        <view class="user-info-area">
          <!-- 名字和标签在上方 -->
          <view class="name-badge-row">
            <text class="owner-name">{{ ownerInfo.nickname }}</text>
            <view class="owner-badge">
              <text class="badge-text">{{ ownerInfo.level }}</text>
            </view>
          </view>
          <!-- 车主ID在下方 -->
          <text class="owner-id">车主ID: {{ ownerInfo.ownerId }}</text>
        </view>
        <view class="settings-btn" @click="goToSettings">
          <text class="fa fa-cog"></text>
        </view>
      </view>
      
      <!-- 收入统计 -->
      <view class="income-stats">
        <view class="stat-item">
          <text class="stat-number">¥{{ ownerStats.todayIncome }}</text>
          <text class="stat-label">今日收入</text>
        </view>
        <view class="stat-item">
          <text class="stat-number">¥{{ ownerStats.monthIncome }}</text>
          <text class="stat-label">本月收入</text>
        </view>
        <view class="stat-item">
          <text class="stat-number">{{ ownerStats.totalOrders }}</text>
          <text class="stat-label">总订单</text>
        </view>
      </view>
    </view>

    <scroll-view class="content-scroll" scroll-y>
      <!-- 收入图表 -->
      <view class="chart-section">
        <view class="section-header">
          <text class="section-title">收入趋势</text>
          <picker :value="chartPeriod" :range="['本周', '本月', '本年']" @change="onChartPeriodChange">
            <view class="period-picker">
              <text class="picker-text">{{ ['本周', '本月', '本年'][chartPeriod] }}</text>
              <text class="fa fa-chevron-down"></text>
            </view>
          </picker>
        </view>
        <view class="chart-container">
          <view class="chart-placeholder">
            <text class="chart-text">收入图表区域</text>
            <text class="chart-desc">这里将显示收入趋势图</text>
          </view>
        </view>
      </view>

      <!-- 快捷功能 -->
      <view class="quick-functions">
        <view class="function-grid">
          <view class="function-item" @click="goToCarManage">
            <view class="function-icon">
              <text class="fa fa-car"></text>
            </view>
            <text class="function-text">车辆管理</text>
          </view>
          <view class="function-item" @click="goToOrderManage">
            <view class="function-icon">
              <text class="fa fa-list-alt"></text>
              <view class="notification-badge" v-if="pendingOrders > 0">{{ pendingOrders }}</view>
            </view>
            <text class="function-text">订单管理</text>
          </view>
          <view class="function-item" @click="goToIncome">
            <view class="function-icon">
              <text class="fa fa-line-chart"></text>
            </view>
            <text class="function-text">收入统计</text>
          </view>
          <view class="function-item" @click="goToWithdraw">
            <view class="function-icon">
              <text class="fa fa-credit-card"></text>
            </view>
            <text class="function-text">提现</text>
          </view>
        </view>
      </view>

      <!-- 最近订单 -->
      <view class="recent-orders">
        <view class="section-header">
          <text class="section-title">最近订单</text>
          <text class="more-link" @click="goToOrderManage">查看全部</text>
        </view>
        <view class="order-list">
          <view class="order-item" 
                v-for="order in recentOrders" 
                :key="order._id"
                @click="goToOrderDetail(order)">
            <view class="order-info">
              <text class="order-title">订单号: {{ order.order_no }}</text>
              <text class="order-car-customer">{{ order.car.brand }} {{ order.car.model }} / {{ order.customer_name }}</text>
              <text class="order-time">{{ order.service_date }} {{ order.service_time }}</text>
            </view>
            <view class="order-right">
              <text class="order-amount">¥{{ order.owner_amount || order.total_amount }}</text>
              <text class="order-status" :class="getOrderStatusClass(order.status)">
                {{ getOrderStatusText(order.status) }}
              </text>
              <view class="order-actions">
                <button class="contact-btn" @click.stop="contactCustomer(order)">联系客户</button>
                <button class="confirm-btn" v-if="order.status === 1" @click.stop="confirmOrder(order)">确认</button>
                <button class="reject-btn" v-if="order.status === 1" @click.stop="rejectOrder(order)">拒绝</button>
              </view>
            </view>
          </view>
        </view>
      </view>

    </scroll-view>
  </view>
</template>

<script>
export default {
  data() {
    return {
      statusBarHeight: 0,
      chartPeriod: 0,
      pendingOrders: 3,
      ownerInfo: {
        nickname: '王师傅',
        avatar: 'https://picsum.photos/100/100?random=90',
        level: '资深车主',
        ownerId: '776543210'
      },
      ownerStats: {
        todayIncome: 1200,
        monthIncome: 15600,
        totalOrders: 156
      },
      recentOrders: []
    }
  },
  onLoad() {
    this.getStatusBarHeight();
    this.loadRecentOrders();
  },
  methods: {
    getStatusBarHeight() {
      const systemInfo = uni.getSystemInfoSync();
      this.statusBarHeight = systemInfo.statusBarHeight || 0;
    },
    onAvatarError() {
      console.log('头像加载失败');
      // 使用默认头像
      this.ownerInfo.avatar = 'https://via.placeholder.com/100x100/cccccc/ffffff?text=头像';
    },
    loadRecentOrders() {
      // 模拟最近订单数据
      this.recentOrders = [
        {
          _id: 'order001',
          order_no: 'WC202501150001',
          car: { brand: '劳斯莱斯', model: '幻影' },
          customer_name: '张先生',
          service_date: '2025-02-14',
          service_time: '09:00',
          pickup_location: '朝阳区三里屯',
          total_amount: 4000,
          owner_amount: 3800,
          status: 1 // 待确认
        },
        {
          _id: 'order002',
          order_no: 'WC202501140002',
          car: { brand: '奔驰', model: 'S级' },
          customer_name: '李先生',
          service_date: '2025-01-20',
          service_time: '14:00',
          pickup_location: '海淀区中关村',
          total_amount: 2400,
          owner_amount: 2280,
          status: 2 // 已确认
        },
        {
          _id: 'order003',
          order_no: 'WC202501130003',
          car: { brand: '宝马', model: '7系' },
          customer_name: '王女士',
          service_date: '2025-01-18',
          service_time: '16:30',
          pickup_location: '朝阳区国贸',
          total_amount: 2800,
          owner_amount: 2660,
          status: 1 // 待确认
        }
      ];
    },
    onChartPeriodChange(e) {
      this.chartPeriod = e.detail.value;
    },
    getOrderStatusClass(status) {
      const classMap = {
        1: 'pending',
        2: 'confirmed',
        3: 'ongoing',
        4: 'completed'
      };
      return classMap[status] || '';
    },
    getOrderStatusText(status) {
      const textMap = {
        1: '待确认',
        2: '已确认',
        3: '进行中',
        4: '已完成'
      };
      return textMap[status] || '';
    },
    goToSettings() {
      uni.navigateTo({
        url: '/pages/owner/settings'
      });
    },
    goToCarManage() {
      uni.navigateTo({
        url: '/pages/owner/car-manage'
      });
    },
    goToOrderManage() {
      uni.navigateTo({
        url: '/pages/owner/order-manage'
      });
    },
    goToIncome() {
      uni.navigateTo({
        url: '/pages/owner/income'
      });
    },
    goToWithdraw() {
      uni.navigateTo({
        url: '/pages/owner/withdraw'
      });
    },
    goToOrderDetail(order) {
      uni.navigateTo({
        url: `/pages/order-detail/order-detail?id=${order._id}`
      });
    },
    // 联系客户
    contactCustomer(order) {
      uni.showActionSheet({
        itemList: ['拨打电话', '发送短信'],
        success: (res) => {
          if (res.tapIndex === 0) {
            // 拨打电话
            uni.makePhoneCall({
              phoneNumber: '138****8888' // 实际应该从订单数据获取
            });
          } else if (res.tapIndex === 1) {
            // 发送短信
            uni.showToast({
              title: '短信功能开发中',
              icon: 'none'
            });
          }
        }
      });
    },
    // 确认订单
    confirmOrder(order) {
      uni.showModal({
        title: '确认订单',
        content: `确认接受订单 ${order.order_no} 吗？`,
        success: (res) => {
          if (res.confirm) {
            // 这里应该调用API确认订单
            order.status = 2; // 更新为已确认状态
            uni.showToast({
              title: '订单已确认',
              icon: 'success'
            });
          }
        }
      });
    },
    // 拒绝订单
    rejectOrder(order) {
      uni.showModal({
        title: '拒绝订单',
        content: `确认拒绝订单 ${order.order_no} 吗？`,
        success: (res) => {
          if (res.confirm) {
            // 这里应该调用API拒绝订单
            const index = this.recentOrders.findIndex(item => item._id === order._id);
            if (index > -1) {
              this.recentOrders.splice(index, 1); // 从列表中移除
            }
            uni.showToast({
              title: '订单已拒绝',
              icon: 'success'
            });
          }
        }
      });
    },
  }
}
</script>

<style lang="scss" scoped>
.owner-dashboard {
  background-color: $uni-bg-color-grey;
  min-height: 100vh;
}

.header-section {
  background: linear-gradient(135deg, $uni-color-primary 0%, rgba($uni-color-primary, 0.8) 100%);
  padding: 20px 0; /* 移除左右内边距限制 */
  
  .header-content {
    display: flex !important;
    align-items: center !important; /* 强制整体垂直居中对齐 */
    margin-bottom: 24px !important;
    padding: 0 16px !important;
    min-height: 64px !important;
    box-sizing: border-box !important;
    
    /* 头像在最左侧 */
    .owner-avatar {
      width: 64px !important;
      height: 64px !important;
      border-radius: 50%;
      border: 2px solid white;
      flex-shrink: 0;
      background-color: rgba(255, 255, 255, 0.1);
      object-fit: cover;
      display: block !important;
      margin: 0 !important;
      padding: 0 !important;
      vertical-align: middle;
    }
    
    /* 用户信息区域 - 与头像垂直居中对齐 */
    .user-info-area {
      flex: 1 !important;
      margin-left: 16px !important;
      margin-right: 56px !important;
      display: flex !important;
      flex-direction: column !important;
      justify-content: center !important; /* 内容垂直居中 */
      height: 64px !important; /* 与头像高度一致 */
      padding: 0 !important;
      box-sizing: border-box !important;
      
      /* 名字和标签行 */
      .name-badge-row {
        display: flex !important;
        align-items: center !important;
        margin-bottom: 4px !important;
        margin-top: 0 !important;
        padding: 0 !important;
        
        .owner-name {
          font-size: 18px !important;
          font-weight: bold !important;
          color: white !important;
          margin-right: 8px !important;
          margin-top: 0 !important;
          margin-bottom: 0 !important;
          padding: 0 !important;
          line-height: 1.2 !important;
        }
        
        .owner-badge {
          .badge-text {
            background: rgba(255, 255, 255, 0.2) !important;
            color: white !important;
            font-size: 12px !important;
            padding: 2px 8px !important;
            border-radius: 10px !important;
            margin: 0 !important;
            line-height: 1 !important;
          }
        }
      }
      
      /* 车主ID */
      .owner-id {
        font-size: 13px !important;
        color: rgba(255, 255, 255, 0.9) !important;
        margin: 0 !important;
        padding: 0 !important;
        line-height: 1.2 !important;
      }
    }
    
    /* 设置按钮在最右侧 */
    .settings-btn {
      width: 40px;
      height: 40px;
      background: rgba(255, 255, 255, 0.2);
      border-radius: 50%;
      display: flex;
      align-items: center;
      justify-content: center;
      color: white;
      font-size: 18px;
      flex-shrink: 0;
    }
  }
  
  .income-stats {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    gap: 8px;
    
    .stat-item {
      text-align: center;
      
      .stat-number {
        font-size: 20px;
        font-weight: bold;
        color: white;
        display: block;
        margin-bottom: 4px;
      }
      
      .stat-label {
        font-size: 12px;
        color: rgba(255, 255, 255, 0.8);
      }
    }
  }
}

.content-scroll {
  padding-top: 12px;
}

.chart-section, .quick-functions, .recent-orders {
  background: white;
  margin-bottom: 12px;
  padding: 20px 0; /* 移除左右内边距限制 */
  
  .section-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 16px;
    padding: 0 20px; /* 给section-header添加左右内边距 */
    
    .section-title {
      font-size: 16px;
      font-weight: bold;
      color: $uni-text-color;
    }
    
    .more-link {
      font-size: 14px;
      color: #ff4d4f;
      font-weight: 500;
    }
    
    .period-picker {
      display: flex;
      align-items: center;
      font-size: 14px;
      color: $uni-text-color;
      
      .fa-chevron-down {
        margin-left: 4px;
        font-size: 12px;
      }
    }
  }
  
  .section-title {
    font-size: 16px;
    font-weight: bold;
    color: $uni-text-color;
    margin-bottom: 16px;
    
    .title-text {
      font-size: 16px;
      font-weight: bold;
      color: $uni-text-color;
    }
  }
}

.chart-container {
  padding: 0 20px; /* 给图表容器添加左右内边距 */
  
  .chart-placeholder {
    height: 200px;
    background: $uni-bg-color-light;
    border-radius: 8px;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    
    .chart-text {
      font-size: 16px;
      color: $uni-text-color-grey;
      margin-bottom: 8px;
    }
    
    .chart-desc {
      font-size: 12px;
      color: $uni-text-color-grey;
    }
  }
}

.function-grid {
  display: grid;
  grid-template-columns: repeat(4, 1fr);
  gap: 12px;
  padding: 0 20px; /* 给功能网格添加左右内边距 */
  
  .function-item {
    display: flex;
    flex-direction: column;
    align-items: center;
    padding: 16px 8px;
    border-radius: 8px;
    
    &:active {
      background-color: $uni-bg-color-light;
    }
    
    .function-icon {
      width: 48px;
      height: 48px;
      border-radius: 50%;
      background: rgba($uni-color-primary, 0.1);
      display: flex;
      align-items: center;
      justify-content: center;
      margin-bottom: 8px;
      position: relative;
      
      .fa {
        color: $uni-color-primary;
        font-size: 20px;
      }
      
      .notification-badge {
        position: absolute;
        top: -4px;
        right: -4px;
        background: $uni-color-error;
        color: white;
        font-size: 10px;
        padding: 2px 6px;
        border-radius: 10px;
        min-width: 16px;
        height: 16px;
        display: flex;
        align-items: center;
        justify-content: center;
      }
    }
    
    .function-text {
      font-size: 12px;
      color: $uni-text-color;
      text-align: center;
    }
  }
}

.order-list {
  padding: 0; /* 移除左右内边距限制，让内容可以到达屏幕边缘 */
  
  .order-item {
    position: relative; /* 为绝对定位提供参考 */
    display: flex;
    justify-content: space-between;
    align-items: flex-start;
    padding: 16px 20px 16px 20px; /* 左侧20px，右侧保持内边距但右侧内容会绝对定位 */
    border-bottom: 1px solid $uni-border-color-light;
    
    &:last-child {
      border-bottom: none;
    }
    
    .order-info {
      flex: 1;
      margin-right: 160px; /* 增加右边距为绝对定位的右侧内容留出空间 */
      
      .order-title {
        font-size: 15px;
        font-weight: 600;
        color: #333;
        display: block;
        margin-bottom: 6px;
        line-height: 1.2;
      }
      
      .order-car-customer {
        font-size: 13px;
        color: #333;
        display: block;
        margin-bottom: 6px;
        line-height: 1.3;
      }
      
      .order-time {
        font-size: 12px;
        color: #999;
        display: block;
        line-height: 1.2;
      }
    }
    
    .order-right {
      position: absolute; /* 绝对定位到右边 */
      right: 16px; /* 距离屏幕右边缘16px */
      top: 16px; /* 距离顶部16px */
      display: flex;
      flex-direction: column;
      align-items: flex-end;
      flex-shrink: 0; /* 防止被压缩 */
      min-width: 140px; /* 增加最小宽度确保按钮有足够空间 */
      
      .order-amount {
        font-size: 18px; /* 增大字体 */
        font-weight: bold;
        color: #000;
        margin-bottom: 10px;
        line-height: 1.2;
      }
      
      .order-status {
        font-size: 13px; /* 稍微增大 */
        padding: 6px 10px; /* 增加内边距 */
        border-radius: 12px;
        font-weight: 500;
        margin-bottom: 10px;
        
        &.confirmed {
          background: #e8f5e8;
          color: #52c41a;
        }
        
        &.pending {
          background: #fff7e6;
          color: #fa8c16;
        }
        
        &.ongoing {
          background: #e6f7ff;
          color: #1890ff;
        }
        
        &.completed {
          background: #f6ffed;
          color: #52c41a;
        }
      }
      
      .order-actions {
        display: flex;
        gap: 8px; /* 增加按钮间距 */
        flex-wrap: wrap;
        justify-content: flex-end;
        width: 100%;
        
        button {
          padding: 6px 14px; /* 增大按钮 */
          border-radius: 6px;
          font-size: 13px; /* 稍微增大字体 */
          font-weight: 500;
          border: none;
          cursor: pointer;
          min-width: 50px; /* 确保按钮有最小宽度 */
        }
        
        .contact-btn {
          background: transparent;
          color: #1890ff;
          text-decoration: underline;
          padding: 4px 6px; /* 联系客户按钮保持较小 */
          min-width: auto;
          
          &:active {
            color: #096dd9;
          }
        }
        
        .confirm-btn {
          background: #1890ff;
          color: white;
          
          &:active {
            background: #096dd9;
          }
        }
        
        .reject-btn {
          background: #ff4d4f;
          color: white;
          
          &:active {
            background: #d9363e;
          }
        }
      }
    }
  }
}

</style>
